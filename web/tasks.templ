package web

import (
    "rminder/internal/database"
    "strconv"
)

templ Tasks(lists []*database.List) {
	@Base() {
	    <rm-tasks-app>
			<!-- left colunm -->
			<rm-sidebar>
                <!-- Sidebar toggle -->
                <!-- Search -->
                <!-- Pinned Lists -->
                <div class="pinned-lists">
                    @Lists(lists, true)
                </div>
                <!-- Groups/Lists -->
                <div class="lists">
                    <p class="lists-label">My lists</p>
                    <div class="lists-holder">
                        @Lists(lists, false)
                    </div>
                </div>
                <!-- Add List -->
                <footer>
                    <dialog class="list-form-container" id="new-list-popover">
                        <form
                        class=""
                        hx-post={ "/lists/create" }
                        method="POST"
                        hx-trigger="submit, keyup[enterKey]"
                        hx-target={ ".lists-holder" }
                        hx-on::after-request="this.reset();this.parentElement.close()">
                            <input
                                class="new-list"
                                name="new-list"
                                type="text"
                                value=""
                                placeholder="List name"
                                required
                                minlength="3"
                                maxlength="255"
                                hx-validate="true"/>
                            <fieldset class="swatch-fieldset">
                                for i, colour := range swatchColours() {
                                    <label>
                                        if i == 0 {
                                           <input type="radio" name="swatch" class="hidden" value={ colour } checked/>
                                        } else {
                                            <input type="radio" name="swatch" class="hidden" value={ colour }/>
                                        }
                             			<div class="swatch"></div>
                              		</label>
                                }
                            </fieldset>
                            <fieldset class="icon-fieldset">
                                for i, icon := range iconsList() {
                                    <label>
                                        if i == 0 {
                                        <input type="radio" name="icon" class="hidden" value={ icon } checked/>
                                        } else {
                                            <input type="radio" name="icon" class="hidden" value={ icon }/>
                                        }
                                        <div class={ "icon-selector " + icon }></div>
                              		</label>
                                }
                            </fieldset>
                            <input type="text" name="position" class="hidden" value={ strconv.Itoa(len(lists)) }/>
                            <fieldset>
                                <div class="btn default cancel-new-list">Cancel</div>
                                <button class="btn primary add-new-list" type="submit">Add</button>
                            </fieldset>
                        </form>
                    </dialog>
                    <div class="footer-actions">
                        <button class="add-list">
                            <span class="add-list--icon"></span>
                            <span>Add list</span>
                        </button>
                    </div>
                </footer>
            </rm-sidebar>
            <!-- center column -->
            <div class="main" role="main" data-list="">
                <div class="list-toolbar">
                    <span class="list-title">Tasks</span>
                </div>
                <div class="container">
                    <form class="add-tasks" hx-post="/tasks/create" method="POST" hx-target=".tasks" hx-on::after-request="this.reset()">
                        <label class="add-task--label" for="task"></label>
                        <input
                            type="text"
                            name="task"
                            id="task"
                            aria-label="Add a task"
                            placeholder="Add a task"
                            required
                            minlength="3"
                            maxlength="255"
                            hx-validate="true"
                        />
                        <button class="add-task" type="submit">Add</button>
                    </form>
                    <div class="tasks">
                        <!-- @TaskList(tasks) -->
                    </div>
                </div>
            </div>
            <!-- right colunm -->
            <aside class="details"></aside>
		</rm-tasks-app>
	}
}

templ Lists(lists []*database.List, flag bool) {
  for _, list := range lists {
      if list.Pinned == flag {
          @List(list)
      }
  }
}
templ List(list *database.List) {
    <rm-list-nav data-id={ strconv.Itoa(list.ID) } data-colour={ list.Colour }>
        <label
            class="list"
            hx-get={ "/lists/" + strconv.Itoa(list.ID)}
            hx-trigger="change"
            hx-target=".main"
        >
            <span class={"icon " + list.Icon }></span>
            <span class="name">{ list.Name }</span>
            <span class="count">{ strconv.Itoa(len(list.Tasks))}</span>
            <input class="hidden" type="radio" name="list-nav" value={ strconv.Itoa(list.ID) }/>
        </label>
    </rm-list-nav>
}

templ Modal(id int) {
    <dialog class="modal">
        <div class="modal__content">
            <span>Task will be permanent deleted, you won't be able to undo this action.</span>
            <div class="modal__actions">
                <button class="btn default">Cancel</button>
                <button
                  class="btn warning"
                  hx-delete={ "/tasks/" + strconv.Itoa(id) }
                  hx-swap="outerHTML"
                  hx-target={ ".tasks__list > li[data-id='" + strconv.Itoa(id) + "']" }>Delete task</button>
            </div>
        </div>
    </dialog>
}

templ TaskList(tasks []*database.Task) {
  <ul class="tasks__list">
  for _, task := range tasks {
    @Task(task)
  }
  </ul>
}

templ Task(task *database.Task) {
  <li class={ taskClasses(task.Completed, task.Important, false) } data-id={ strconv.Itoa(task.ID) }>
    <span
      class="completed-ckeck"
      title="Set it as complete"
      hx-put={ "/tasks/" + strconv.Itoa(task.ID) + "/completed" }
      hx-trigger="click"
      hx-swap="outerHTML"
      hx-target={ ".tasks__list > li[data-id='" + strconv.Itoa(task.ID) + "']" }></span>
    <label
      class="show-details"
      hx-get={ "/tasks/" + strconv.Itoa(task.ID) }
      hx-trigger="change"
      hx-target=".details"
    >
      <span>{ task.Title }</span>
      <input class="hidden" type="radio" name="task-detail" value={ strconv.Itoa(task.ID) }/>
    </label>
    <!--<span
      class="my-day"
      title="Set it as todo for today"
      hx-put={ "/tasks/" + strconv.Itoa(task.ID) + "/my-day" }
      hx-trigger="click"
      hx-swap="outerHTML"
      hx-target={ ".tasks__list > li[data-id='" + strconv.Itoa(task.ID) + "']" }></span>-->
    <span
      class="importance-check"
      title="Set it as important"
      hx-put={ "/tasks/" + strconv.Itoa(task.ID) + "/important" }
      hx-trigger="click"
      hx-swap="outerHTML"
      hx-target={ ".tasks__list > li[data-id='" + strconv.Itoa(task.ID) + "']" }></span>
  </li>
}

templ TaskDetails(task *database.Task) {
    <rm-task-details task-id={ strconv.Itoa(task.ID) }>
        <div class="details__body">
            <div class="detail__title">
                <form
                  class="add-tasks"
                  hx-put={ "/tasks/" + strconv.Itoa(task.ID) + "/title" }
                  method="POST"
                  hx-swap="outerHTML"
                  hx-target={ ".tasks__list > li[data-id='" + strconv.Itoa(task.ID) + "']" }>
                    <input
                        class="title"
                        name="title"
                        type="text"
                        value={ task.Title }
                        minlength="3"
                        maxlength="255"
                        hx-validate="true"/>
                    <button class="rename" type="submit">Rename</button>
                </form>
            </div>
            <div class="detail__note">
                <form
                    hx-put={ "/tasks/" + strconv.Itoa(task.ID) + "/description" }
                    hx-vals='js:{description: getDescription()}'
                    hx-swap="none" method="POST">
                    <div id="note-editor" class="ql-container ql-snow">@templ.Raw(task.Description)</div>
                    <button class="add-note" type="submit">Add</button>
                </form>
            </div>
        </div>
        <div class="details__footer">
            <button class="close">
                <i class="close-icon"></i>
            </button>
            <span class="creation-date" title="Creation date">{ formatDate(task.CreatedAt) }</span>
            <button class="remove">
                <i class="trash-icon"></i>
            </button>
        </div>
        @Modal(task.ID)
    </rm-task-details>
}

templ ListsContent(list *database.List) {
    <div class="list-toolbar">
        <span class="list-title">{ list.Name }</span>
    </div>
    <div class="container">
        <form class="add-tasks" hx-post="/tasks/create" method="POST" hx-target=".tasks" hx-on::after-request="this.reset()">
            <label class="add-task--label" for="task"></label>
            <input
                type="text"
                name="task"
                id="task"
                aria-label="Add a task"
                placeholder="Add a task"
                required
                minlength="3"
                maxlength="255"
                hx-validate="true"
            />
            <input type="text" name="list" class="hidden" value={ strconv.Itoa(list.ID) }/>
            <button class="add-task" type="submit">Add</button>
        </form>
        <div class="tasks">
            @TaskList(list.Tasks)
        </div>
    </div>
}
