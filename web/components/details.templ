package components

import (
    "rminder/internal/database"
    "strconv"
    "strings"
)

templ Details(task *database.Task) {
    <rm-task-details task-id={ strconv.Itoa(task.ID) }>
        <div class="details__body">
            <div class="detail__title">
                <form
                  class="add-tasks"
                  hx-put={ "/tasks/" + strconv.Itoa(task.ID) + "/title" }
                  method="POST"
                  hx-swap="outerHTML"
                  hx-target={ ".tasks__list > li[data-id='" + strconv.Itoa(task.ID) + "']" }>
                    <input
                        class="title"
                        name="title"
                        type="text"
                        value={ task.Title }
                        minlength="3"
                        maxlength="255"
                        hx-validate="true"/>
                    <button class="rename" type="submit">Rename</button>
                </form>
            </div>
            <div class="details__priority">
                <label for="priority">Priority</label>
                <select
                    name="priority"
                    hx-put={ "/tasks/" + strconv.Itoa(task.ID) + "/priority" }
                    hx-trigger="change"
                    hx-swap="outerHTML"
                   	hx-target={ ".tasks__list > li[data-id='" + strconv.Itoa(task.ID) + "']"  }>
                    for i, value := range priorityValues() {
                        if i == task.Priority {
                            <option value={ strconv.Itoa(i) } selected>{ value }</option>
                        } else {
                            <option value={ strconv.Itoa(i) }>{ value }</option>
                        }
                    }
                </select>
            </div>
            <div class="details__schedule">
            	<label>
             		<span>Start Date</span>
             		<input
               			name="from"
                  		type="date"
                    	value={ formatDateOnly(task.StartAt) }
                      	hx-put={ "/tasks/" + strconv.Itoa(task.ID) + "/date-start" }
                       	hx-trigger="change"
                        hx-swap="none">
             	</label>
             	<label>
              		<span>Due Date</span>
              		<input
                		name="to"
                  		type="date"
                    	value={ formatDateOnly(task.EndAt) }
                     	hx-put={ "/tasks/" + strconv.Itoa(task.ID) + "/date-end" }
                     	hx-trigger="change"
                      	hx-swap="none">
              	</label>
            </div>
            <div class="detail__note">
                <form
                    hx-put={ "/tasks/" + strconv.Itoa(task.ID) + "/description" }
                    hx-vals='js:{description: getDescription()}'
                    hx-swap="none" method="POST">
                    <div id="note-editor" class="ql-container ql-snow">@templ.Raw(task.Description)</div>
                    <button class="add-note" type="submit">Add</button>
                </form>
            </div>
        </div>
        <div class="details__footer">
            <button
            	class="close"
            	hx-put={ "/tasks/" + strconv.Itoa(task.ID) + "/remove-persistence" }
            	hx-swap="none">
                <i class="close-icon"></i>
            </button>
            <span class="creation-date" title="Creation date">{ formatDate(task.CreatedAt) }</span>
            <button class="remove">
                <i class="trash-icon"></i>
            </button>
        </div>
        @Modal(task.ID)
    </rm-task-details>
}

templ Modal(id int) {
    <dialog class="modal">
        <div class="modal__content">
            <span>Task will be permanent deleted, you won't be able to undo this action.</span>
            <div class="modal__actions">
                <button class="btn default">Cancel</button>
                <button
                  class="btn warning"
                  hx-delete={ "/tasks/" + strconv.Itoa(id) }
                  hx-swap="outerHTML"
                  hx-target={ ".tasks__list > li[data-id='" + strconv.Itoa(id) + "']" }>Delete task</button>
            </div>
        </div>
    </dialog>
}
